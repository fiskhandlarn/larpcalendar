name: Lint, test, build & deploy to production

on:
  push:
    branches:
      - main
jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Cache firebase emulators
        uses: actions/cache@v2
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-emulators-${{ hashFiles('~/.cache/firebase/emulators/**') }}
      - name: Install packages
        run: yarn
      - name: Fetch origin
        run: git fetch origin main
      - name: Lint affected
        run: yarn nx affected --target=lint --base=remotes/origin/main~1 --head=remotes/origin/main
      - name: Install Firebase tools
        run: npm install -g firebase-tools
      - name: Test affected
        run: firebase emulators:exec 'yarn nx affected --target=test --base=remotes/origin/main~1 --head=remotes/origin/main' --only auth,firestore --import ./scripts/firebase/firestore-export
        env:
          NX_FIREBASE_API_KEY: '${{ secrets.NX_FIREBASE_API_KEY }}'
          NX_FIREBASE_AUTH_DOMAIN: '${{ secrets.NX_FIREBASE_AUTH_DOMAIN }}'
          NX_FIREBASE_PROJECT_ID: '${{ secrets.NX_FIREBASE_PROJECT_ID }}'
          NX_FIREBASE_STORAGE_BUCKET: '${{ secrets.NX_FIREBASE_STORAGE_BUCKET }}'
          NX_FIREBASE_MESSAGING_SENDER_ID: '${{ secrets.NX_FIREBASE_MESSAGING_SENDER_ID }}'
          NX_FIREBASE_APP_ID: '${{ secrets.NX_FIREBASE_APP_ID }}'
          NX_FIREBASE_MEASUREMENT_ID: '${{ secrets.NX_FIREBASE_MEASUREMENT_ID }}'
  build_and_deploy:
    needs: lint_and_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install packages
        run: yarn
      - name: Build affected
        run: yarn nx affected --target=build --base=remotes/origin/main~1 --head=remotes/origin/main
        env:
          NODE_ENV: 'production'
          NX_FIREBASE_API_KEY: '${{ secrets.NX_FIREBASE_API_KEY }}'
          NX_FIREBASE_AUTH_DOMAIN: '${{ secrets.NX_FIREBASE_AUTH_DOMAIN }}'
          NX_FIREBASE_PROJECT_ID: '${{ secrets.NX_FIREBASE_PROJECT_ID }}'
          NX_FIREBASE_STORAGE_BUCKET: '${{ secrets.NX_FIREBASE_STORAGE_BUCKET }}'
          NX_FIREBASE_MESSAGING_SENDER_ID: '${{ secrets.NX_FIREBASE_MESSAGING_SENDER_ID }}'
          NX_FIREBASE_APP_ID: '${{ secrets.NX_FIREBASE_APP_ID }}'
          NX_FIREBASE_MEASUREMENT_ID: '${{ secrets.NX_FIREBASE_MEASUREMENT_ID }}'
      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'dist/apps/larpcalendar-web'

      - name: Deploy to production environment
        if: steps.check_files.outputs.files_exists == 'true'
        # Only runs if all of the files exists
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_LARP_CALENDAR_9F83F }}'
          projectId: '${{ secrets.NX_FIREBASE_PROJECT_ID }}'
          channelId: live
